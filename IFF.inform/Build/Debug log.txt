Debugging log of Inform 7
Inform called as: C:\Program Files (x86)\Inform 7\Compilers\ni -internal C:\Program Files (x86)\Inform 7\Internal -project C:\Users\Sydney Young\Documents\GitHub\IFF\IFF.inform -format=ulx
Found language bundle 'English' (from .materials)
Found language bundle 'French' (from .materials)
Found language bundle 'German' (from .materials)
Found language bundle 'Italian' (from .materials)
Found language bundle 'Spanish' (from .materials)
Found language bundle 'Swedish' (from .materials)
Reading language definition from <C:\Program Files (x86)\Inform 7\Internal\Languages\English\Syntax.preform>
720 declarations read (14002 words)


-----------------------------------------------------
Phase I ... Lexical analysis
-----------------------------------------------------

I've now read your source text, which is 1351 words long.


-----------------------------------------------------
Phase II ... Semantic analysis Ia
-----------------------------------------------------

I've also read Standard Rules by Graham Nelson, which is 42616 words long.
I've also read English Language by Graham Nelson, which is 2288 words long.
I've also read Rideable Vehicles by Graham Nelson, which is 1819 words long.


-----------------------------------------------------
Phase III ... Initialise language semantics
-----------------------------------------------------



-----------------------------------------------------
Phase IV ... Semantic analysis Ib
-----------------------------------------------------



-----------------------------------------------------
Phase V ... Semantic analysis II
-----------------------------------------------------



-----------------------------------------------------
Phase VI ... Semantic analysis III
-----------------------------------------------------



-----------------------------------------------------
Phase VII ... First pass through assertions
-----------------------------------------------------



-----------------------------------------------------
Phase VIII ... Second pass through assertions
-----------------------------------------------------



-----------------------------------------------------
Phase IX ... Making the model world
-----------------------------------------------------



-----------------------------------------------------
Phase X ... Tables and grammar
-----------------------------------------------------



-----------------------------------------------------
Phase XI ... Phrases and rules
-----------------------------------------------------



-----------------------------------------------------
Phase XII ... Code generation
-----------------------------------------------------



==== Phase XII.1 ... Compiling the storage for the model world ====



==== Phase XII.2 ... Compiling the tables ====



==== Phase XII.3 ... Compiling the equations ====



==== Phase XII.4 ... Compiling the named action patterns ====



==== Phase XII.5 ... Compiling the action routines ====



==== Phase XII.6 ... Compiling first block of phrases ====

                (a.2) problem message:
                found: (A)'player is wearing the jacket and the player is wearing the gloves and the player is wearing the hat'/UNKNOWN/UNKNOWN
                expected: (G)'condition'/CONDITION_FMY/UNKNOWN
                Problem PM_CompoundConditionFailed issued from inform7/Chapter 20/Type Checking.w, line 905

                  >--> In the sentence 'unless the player is wearing the jacket and the player
                    is wearing the gloves and the player is wearing the hat' (source text, line 84),
                    I was expecting that 'player is wearing the jacket and the player is
                    wearing the gloves and the player is wearing the hat' would be a condition.
                    It didn't make sense as one long phrase, but because it was divided up by
                    'and'/'or', I tried breaking it down into smaller conditions, but that
                    didn't work either. 'player is wearing the jacket' was okay; 'the player is
                    wearing the gloves' was okay; 'the player is wearing the hat' was okay; but
                    that combination of conditions isn't allowed to be joined together with
                    'and' or 'or', because that would just be too confusing. For example, 'if
                    the player is carrying a container or a supporter' has an obvious meaning
                    in English, but Inform reads it as two different conditions glued together:
                    'if the player is carrying a container', and also 'a supporter'. The
                    meaning of the first is obvious. The second part is true if the current
                    item under discussion is a supporter - for instance, the noun of the
                    current action, or the item to which a definition applies. Both of these
                    conditions are useful in different circumstances, but combining them in one
                    condition like this makes a very misleading line of text. So Inform
                    disallows it.

0. group:0    [0389] gross    "unless ( c - condition ) begin" ((A)'player is wearing the jacket and the player is wearing the gloves and the player is wearing the hat'/UNKNOWN/UNKNOWN)

    I was trying to match this phrase:


      unless (player is wearing the jacket and the player is wearing the gloves
    and the player is wearing the hat - a condition): 


    But I didn't recognise 'player is wearing the jacket and the player is
    wearing the gloves and the player is wearing the hat'.



==== Phase XII.7 ... Compiling the rulebooks ====



==== Phase XII.8 ... Compiling scene details ====



==== Phase XII.9 ... CTNL ====



==== Phase XII.10 ... Slashing grammar (G1) ====



==== Phase XII.11 ... Determining grammar (G2) ====



-----------------------------------------------------
Phase XIII ... Compilation now complete
-----------------------------------------------------

Total of 4 files written as streams.
CPU time: 251 centiseconds


That concludes the debugging log from this run of Inform.
Its contents were as follows, and can be changed by placing
text like 'Include property creations in the debugging log.'
or 'Omit everything from the debugging log.' in the source.

Included:
  debugging log contents  debugging log inclusions
Omitted:
  action creations   action pattern compilation  action pattern parsing  assemblies    assertions    case insensitive filehandling
  conditions    constructed past participles  constructed plurals   description compilation   excerpt meanings   excerpt parsing 
  expressions    extensions census   figure creations   grammar    grammar construction   headings  
  implications    inferences    kind changes   kind checking   kind creations   lexical output 
  local variables   matching    meaning list allocation  memory allocation   noun resolution   object compilation 
  object creations   object tree   phrase comparisons   phrase compilation   phrase creations   phrase registration 
  phrase usage   predicate calculus   predicate calculus workings  pronouns    property creations   property provision 
  property translations   relation definitions   rule attachments   rulebook compilation   spatial map   spatial map workings
  specification permissions   specification usage   specificities    table construction   template reading   text substitutions 
  time periods   variable creations   verifications    vocabulary  
